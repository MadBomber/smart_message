<?xml version="1.0" encoding="UTF-8"?>
<svg width="900" height="700" viewBox="0 0 900 700" xmlns="http://www.w3.org/2000/svg">
  <defs>
    <style>
      .bg { fill: transparent; }
      .process { fill: #2a2a2a; stroke: #4a9eff; stroke-width: 2; rx: 8; }
      .redis { fill: #3a1a1a; stroke: #ff4a4a; stroke-width: 3; rx: 12; }
      .channel { fill: #1a2a3a; stroke: #4affff; stroke-width: 2; rx: 6; }
      .device { fill: #1a3a1a; stroke: #4aff4a; stroke-width: 2; rx: 6; }
      .arrow { stroke: #ffaa4a; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .text { fill: #ffffff; font-family: 'Arial', sans-serif; font-size: 12px; }
      .title { fill: #4a9eff; font-family: 'Arial', sans-serif; font-size: 18px; font-weight: bold; }
      .subtitle { fill: #ffaa4a; font-family: 'Arial', sans-serif; font-size: 11px; }
      .redis-text { fill: #ff4a4a; font-family: 'Arial', sans-serif; font-size: 14px; font-weight: bold; }
      .channel-text { fill: #4affff; font-family: 'Arial', sans-serif; font-size: 10px; }
    </style>
    <marker id="arrowhead" markerWidth="8" markerHeight="6" 
            refX="8" refY="3" orient="auto">
      <polygon points="0 0, 8 3, 0 6" fill="#ffaa4a" />
    </marker>
  </defs>
  
  <!-- Background -->
  <rect class="bg" width="900" height="700"/>
  
  <!-- Title -->
  <text x="450" y="25" text-anchor="middle" class="title">SmartMessage Redis Transport Architecture</text>
  <text x="450" y="45" text-anchor="middle" class="subtitle">Distributed Smart Home IoT System (01_smart_home_iot_demo.rb)</text>
  
  <!-- Redis Server (Central Hub) -->
  <rect x="350" y="300" width="200" height="120" class="redis"/>
  <text x="450" y="325" text-anchor="middle" class="redis-text">Redis Server</text>
  <text x="450" y="345" text-anchor="middle" class="text">localhost:6379</text>
  <text x="450" y="365" text-anchor="middle" class="subtitle">Pub/Sub Channels:</text>
  <text x="450" y="385" text-anchor="middle" class="channel-text">SensorDataMessage</text>
  <text x="450" y="400" text-anchor="middle" class="channel-text">DeviceCommandMessage</text>
  <text x="450" y="415" text-anchor="middle" class="channel-text">SecurityAlertMessage</text>
  
  <!-- Process 1: Living Room Sensors -->
  <rect x="50" y="80" width="160" height="120" class="process"/>
  <text x="130" y="105" text-anchor="middle" class="title">Process 1</text>
  <text x="130" y="125" text-anchor="middle" class="text">Living Room</text>
  
  <rect x="70" y="140" width="120" height="50" class="device"/>
  <text x="130" y="160" text-anchor="middle" class="text">Temperature Sensor</text>
  <text x="130" y="175" text-anchor="middle" class="subtitle">Publishes every 5s</text>
  
  <!-- Process 2: Security System -->
  <rect x="50" y="480" width="160" height="120" class="process"/>
  <text x="130" y="505" text-anchor="middle" class="title">Process 2</text>
  <text x="130" y="525" text-anchor="middle" class="text">Security System</text>
  
  <rect x="70" y="540" width="120" height="50" class="device"/>
  <text x="130" y="560" text-anchor="middle" class="text">Motion Detector</text>
  <text x="130" y="575" text-anchor="middle" class="subtitle">Publishes alerts</text>
  
  <!-- Process 3: Smart Thermostat -->
  <rect x="690" y="80" width="160" height="120" class="process"/>
  <text x="770" y="105" text-anchor="middle" class="title">Process 3</text>
  <text x="770" y="125" text-anchor="middle" class="text">Smart Thermostat</text>
  
  <rect x="710" y="140" width="120" height="50" class="device"/>
  <text x="770" y="160" text-anchor="middle" class="text">HVAC Controller</text>
  <text x="770" y="175" text-anchor="middle" class="subtitle">Subscribes &amp; Controls</text>
  
  <!-- Process 4: Dashboard -->
  <rect x="690" y="480" width="160" height="120" class="process"/>
  <text x="770" y="505" text-anchor="middle" class="title">Process 4</text>
  <text x="770" y="525" text-anchor="middle" class="text">Home Dashboard</text>
  
  <rect x="710" y="540" width="120" height="50" class="device"/>
  <text x="770" y="560" text-anchor="middle" class="text">Web Interface</text>
  <text x="770" y="575" text-anchor="middle" class="subtitle">Displays all data</text>
  
  <!-- Process 5: Energy Monitor -->
  <rect x="370" y="80" width="160" height="120" class="process"/>
  <text x="450" y="105" text-anchor="middle" class="title">Process 5</text>
  <text x="450" y="125" text-anchor="middle" class="text">Energy Monitor</text>
  
  <rect x="390" y="140" width="120" height="50" class="device"/>
  <text x="450" y="160" text-anchor="middle" class="text">Power Meter</text>
  <text x="450" y="175" text-anchor="middle" class="subtitle">Tracks usage</text>
  
  <!-- Message Flow Arrows -->
  <!-- Publishers to Redis -->
  <path d="M 210 140 L 350 330" class="arrow"/>
  <path d="M 210 540 L 350 380" class="arrow"/>
  <path d="M 450 200 L 450 300" class="arrow"/>
  
  <!-- Redis to Subscribers -->
  <path d="M 550 330 L 690 140" class="arrow"/>
  <path d="M 550 380 L 690 540" class="arrow"/>
  
  <!-- Network Boundaries -->
  <rect x="20" y="50" width="860" height="580" fill="none" stroke="#666" stroke-width="2" stroke-dasharray="10,5"/>
  <text x="30" y="70" class="subtitle">Network: Multiple Ruby Processes • Same Machine or Distributed</text>
  
  <!-- Channel Details -->
  <rect x="100" y="230" width="700" height="50" class="channel"/>
  <text x="450" y="250" text-anchor="middle" class="title">Redis Pub/Sub Channels</text>
  <text x="150" y="270" class="channel-text">SensorDataMessage: Temperature, Humidity, Light</text>
  <text x="450" y="270" class="channel-text">SecurityAlertMessage: Motion, Door, Window</text>
  <text x="750" y="270" class="channel-text">DeviceCommandMessage: HVAC, Lights</text>
  
  <!-- Key Features -->
  <rect x="50" y="640" width="800" height="50" class="redis"/>
  <text x="70" y="660" class="text">✓ Distributed: Processes can run on different machines</text>
  <text x="70" y="675" class="text">✓ Real-time: Instant message delivery via Redis pub/sub</text>
  
  <text x="450" y="660" class="text">✓ Scalable: Add/remove publishers and subscribers dynamically</text>
  <text x="450" y="675" class="text">✓ Reliable: Redis handles connection pooling and fault tolerance</text>
  
  <text x="650" y="660" class="text">✓ Channel-based: Each message type gets own channel</text>
  <text x="650" y="675" class="text">✓ Automatic: Message routing handled by Redis</text>
</svg>