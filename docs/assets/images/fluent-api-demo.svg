<svg width="900" height="500" xmlns="http://www.w3.org/2000/svg" style="background: transparent;">
  <defs>
    <style>
      .title { font: bold 18px sans-serif; fill: #e1e5e9; text-anchor: middle; }
      .subtitle { font: 16px sans-serif; fill: #c9d1d9; text-anchor: middle; }
      .code { font: 14px 'Courier New', monospace; fill: #79c0ff; }
      .comment { font: 12px 'Courier New', monospace; fill: #8b949e; }
      .string { font: 14px 'Courier New', monospace; fill: #a5c261; }
      .keyword { font: 14px 'Courier New', monospace; fill: #ff7b72; }
      .method { font: 14px 'Courier New', monospace; fill: #ffa657; }
      .pattern-result { font: 12px 'Courier New', monospace; fill: #56d364; }
      .box { fill: #21262d; stroke: #30363d; stroke-width: 2; rx: 8; }
      .highlight-box { fill: #0d1117; stroke: #a5a5ff; stroke-width: 2; rx: 8; }
      .result-box { fill: #161b22; stroke: #56d364; stroke-width: 2; rx: 6; }
    </style>
  </defs>
  
  <!-- Title -->
  <text x="450" y="30" class="title">Redis Enhanced Transport - Fluent API Examples</text>
  
  <!-- Basic Examples -->
  <rect x="50" y="60" width="800" height="140" class="box"/>
  <text x="450" y="85" class="subtitle">Basic Fluent API Patterns</text>
  
  <!-- From subscription -->
  <text x="70" y="110" class="comment">// Subscribe to all messages FROM a specific service</text>
  <text x="70" y="130" class="code">transport.</text><text x="170" y="130" class="method">where</text><text x="220" y="130" class="code">().</text><text x="260" y="130" class="method">from</text><text x="300" y="130" class="code">(</text><text x="310" y="130" class="string">'api-gateway'</text><text x="420" y="130" class="code">).</text><text x="460" y="130" class="method">subscribe</text>
  <text x="70" y="150" class="pattern-result">→ Pattern: *.api-gateway.*</text>
  
  <!-- To subscription -->
  <text x="70" y="175" class="comment">// Subscribe to all messages TO a specific service</text>
  <text x="70" y="195" class="code">transport.</text><text x="170" y="195" class="method">where</text><text x="220" y="195" class="code">().</text><text x="260" y="195" class="method">to</text><text x="290" y="195" class="code">(</text><text x="300" y="195" class="string">'user-service'</text><text x="420" y="195" class="code">).</text><text x="460" y="195" class="method">subscribe</text>
  <text x="70" y="215" class="pattern-result">→ Pattern: *.*.user-service</text>
  
  <!-- Combined Examples -->
  <rect x="50" y="220" width="800" height="160" class="highlight-box"/>
  <text x="450" y="245" class="subtitle">Combined Conditions</text>
  
  <!-- Two conditions -->
  <text x="70" y="270" class="comment">// FROM web-app TO user-service</text>
  <text x="70" y="290" class="code">transport.</text><text x="170" y="290" class="method">where</text><text x="220" y="290" class="code">().</text><text x="260" y="290" class="method">from</text><text x="300" y="290" class="code">(</text><text x="310" y="290" class="string">'web-app'</text><text x="390" y="290" class="code">).</text><text x="430" y="290" class="method">to</text><text x="460" y="290" class="code">(</text><text x="470" y="290" class="string">'user-service'</text><text x="580" y="290" class="code">).</text><text x="620" y="290" class="method">subscribe</text>
  <text x="70" y="310" class="pattern-result">→ Pattern: *.web-app.user-service</text>
  
  <!-- Three conditions -->
  <text x="70" y="335" class="comment">// Specific message TYPE from monitoring TO admin</text>
  <text x="70" y="355" class="code">transport.</text><text x="170" y="355" class="method">where</text><text x="220" y="355" class="code">().</text><text x="260" y="355" class="method">type</text><text x="300" y="355" class="code">(</text><text x="310" y="355" class="string">'AlertMessage'</text><text x="430" y="355" class="code">).</text><text x="470" y="355" class="method">from</text><text x="510" y="355" class="code">(</text><text x="520" y="355" class="string">'monitoring'</text><text x="620" y="355" class="code">).</text><text x="660" y="355" class="method">to</text><text x="690" y="355" class="code">(</text><text x="700" y="355" class="string">'admin'</text><text x="750" y="355" class="code">)</text>
  <text x="70" y="375" class="pattern-result">→ Pattern: alertmessage.monitoring.admin</text>
  
  <!-- Convenience vs Fluent -->
  <rect x="50" y="400" width="400" height="80" class="result-box"/>
  <text x="250" y="425" class="subtitle">Convenience Methods</text>
  <text x="70" y="450" class="code">transport.</text><text x="170" y="450" class="method">subscribe_to_alerts</text><text x="320" y="450" class="code">()</text>
  <text x="70" y="470" class="comment">// Multiple alert patterns automatically</text>
  
  <rect x="470" y="400" width="380" height="80" class="result-box"/>
  <text x="660" y="425" class="subtitle">Equivalent Fluent</text>
  <text x="490" y="445" class="code">transport.</text><text x="590" y="445" class="method">where</text><text x="640" y="445" class="code">().</text><text x="680" y="445" class="method">type</text><text x="720" y="445" class="code">(</text><text x="730" y="445" class="string">'AlertMessage'</text><text x="840" y="445" class="code">)</text>
  <text x="490" y="465" class="code">  .</text><text x="530" y="465" class="method">subscribe</text>
</svg>