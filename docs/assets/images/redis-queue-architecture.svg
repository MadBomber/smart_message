<svg width="900" height="400" xmlns="http://www.w3.org/2000/svg" style="background: transparent;">
  <defs>
    <style>
      .title { font: bold 18px sans-serif; fill: #e1e5e9; text-anchor: middle; }
      .label { font: 14px sans-serif; fill: #c9d1d9; text-anchor: middle; }
      .small-label { font: 12px sans-serif; fill: #8b949e; text-anchor: middle; }
      .box { fill: #21262d; stroke: #30363d; stroke-width: 2; rx: 8; }
      .highlight-box { fill: #0d1117; stroke: #f85149; stroke-width: 2; rx: 8; }
      .queue-box { fill: #0d1117; stroke: #56d364; stroke-width: 2; rx: 8; }
      .async-box { fill: #161b22; stroke: #a5a5ff; stroke-width: 2; rx: 6; }
      .consumer-box { fill: #161b22; stroke: #ffa657; stroke-width: 2; rx: 6; }
      .arrow { stroke: #58a6ff; stroke-width: 2; fill: none; marker-end: url(#arrowhead); }
      .queue-flow { stroke: #56d364; stroke-width: 3; fill: none; marker-end: url(#arrowhead-green); }
      .async-flow { stroke: #a5a5ff; stroke-width: 2; fill: none; marker-end: url(#arrowhead-purple); }
    </style>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#58a6ff" />
    </marker>
    <marker id="arrowhead-green" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#56d364" />
    </marker>
    <marker id="arrowhead-purple" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#a5a5ff" />
    </marker>
  </defs>
  
  <!-- Title -->
  <text x="450" y="30" class="title">Redis Queue Transport Architecture</text>
  
  <!-- Publisher -->
  <rect x="50" y="80" width="120" height="80" class="box"/>
  <text x="110" y="105" class="label">Publisher</text>
  <text x="110" y="125" class="small-label">OrderMessage</text>
  <text x="110" y="140" class="small-label">Async context</text>
  <text x="110" y="155" class="small-label">Fiber-based</text>
  
  <!-- Routing Engine -->
  <rect x="220" y="80" width="140" height="80" class="highlight-box"/>
  <text x="290" y="105" class="label">Routing Engine</text>
  <text x="290" y="125" class="small-label">Pattern matching:</text>
  <text x="290" y="140" class="small-label">#.*.payment</text>
  <text x="290" y="155" class="small-label">order.#.*.*</text>
  
  <!-- Redis Lists (Queues) -->
  <rect x="410" y="60" width="130" height="50" class="queue-box"/>
  <text x="475" y="80" class="small-label">Redis List (FIFO)</text>
  <text x="475" y="95" class="small-label">LPUSH/BRPOP</text>
  
  <rect x="410" y="120" width="130" height="50" class="queue-box"/>
  <text x="475" y="140" class="small-label">Persistent Queue</text>
  <text x="475" y="155" class="small-label">Message ordering</text>
  
  <!-- Consumer Group -->
  <rect x="590" y="80" width="140" height="80" class="consumer-box"/>
  <text x="660" y="105" class="label">Consumer Group</text>
  <text x="660" y="125" class="small-label">"workers"</text>
  <text x="660" y="140" class="small-label">Load balancing</text>
  <text x="660" y="155" class="small-label">Fault tolerance</text>
  
  <!-- Async Workers -->
  <rect x="780" y="60" width="100" height="40" class="async-box"/>
  <text x="830" y="80" class="small-label">Worker 1</text>
  <text x="830" y="95" class="small-label">Fiber</text>
  
  <rect x="780" y="110" width="100" height="40" class="async-box"/>
  <text x="830" y="130" class="small-label">Worker 2</text>
  <text x="830" y="145" class="small-label">Fiber</text>
  
  <rect x="780" y="160" width="100" height="40" class="async-box"/>
  <text x="830" y="180" class="small-label">Worker N</text>
  <text x="830" y="195" class="small-label">Fiber</text>
  
  <!-- Flow Arrows -->
  <line x1="170" y1="120" x2="220" y2="120" class="arrow"/>
  <line x1="360" y1="100" x2="410" y2="85" class="queue-flow"/>
  <line x1="360" y1="140" x2="410" y2="145" class="queue-flow"/>
  <line x1="540" y1="120" x2="590" y2="120" class="queue-flow"/>
  <line x1="730" y1="100" x2="780" y2="80" class="async-flow"/>
  <line x1="730" y1="120" x2="780" y2="130" class="async-flow"/>
  <line x1="730" y1="140" x2="780" y2="180" class="async-flow"/>
  
  <!-- Performance Stats -->
  <rect x="50" y="220" width="800" height="120" class="async-box"/>
  <text x="450" y="245" class="label">Performance &amp; Features</text>
  
  <text x="200" y="270" class="small-label">Latency: ~0.5ms</text>
  <text x="200" y="285" class="small-label">Throughput: 100K+ msg/sec</text>
  <text x="200" y="300" class="small-label">10x faster than RabbitMQ</text>
  
  <text x="450" y="270" class="small-label">Concurrent Consumers: 1000+</text>
  <text x="450" y="285" class="small-label">Memory per Consumer: ~2KB</text>
  <text x="450" y="300" class="small-label">1000x less than RabbitMQ</text>
  
  <text x="700" y="270" class="small-label">• Message Persistence</text>
  <text x="700" y="285" class="small-label">• Load Balancing</text>
  <text x="700" y="300" class="small-label">• Dead Letter Queues</text>
  
  <!-- Key Benefits -->
  <text x="450" y="360" class="label">Enterprise messaging with Redis performance: RabbitMQ features + 10x speed + Async scalability</text>
  <text x="450" y="380" class="small-label">Perfect for production systems requiring message persistence, load balancing, and maximum throughput</text>
</svg>